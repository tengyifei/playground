HloModule IrToHlo.306, entry_computation_layout={(f32[64]{0}, f32[64]{0}, f32[64]{0}, f32[64]{0}, f32[64]{0}, /*index=5*/f32[64]{0}, f32[64]{0}, f32[64]{0}, f32[64]{0}, f32[64]{0}, /*index=10*/f32[64,64]{1,0}, f32[64,64]{1,0}, f32[64,64]{1,0}, f32[64,64]{1,0}, f32[64,64]{1,0}, /*index=15*/f32[64,64]{1,0}, f32[64,64]{1,0}, f32[64,64]{1,0}, f32[64,64]{1,0}, f32[64,64]{1,0}, /*index=20*/f32[64]{0}, s64[])->(f32[64,64]{1,0}, f32[64]{0})}

%PyLoweringContext.72 (p0.74: f32[64], p1.75: f32[64,64], p2.77: f32[64]) -> (f32[64], f32[64]) {
  %p2.77 = f32[64]{0} parameter(2)
  %reshape.78 = f32[1,64]{1,0} reshape(f32[64]{0} %p2.77)
  %p1.75 = f32[64,64]{1,0} parameter(1)
  %transpose.76 = f32[64,64]{0,1} transpose(f32[64,64]{1,0} %p1.75), dimensions={1,0}
  %dot.79 = f32[1,64]{1,0} dot(f32[1,64]{1,0} %reshape.78, f32[64,64]{0,1} %transpose.76), lhs_contracting_dims={1}, rhs_contracting_dims={0}
  %reshape.80 = f32[64]{0} reshape(f32[1,64]{1,0} %dot.79)
  %p0.74 = f32[64]{0} parameter(0)
  %constant.73 = f32[] constant(1)
  %broadcast.81 = f32[64]{0} broadcast(f32[] %constant.73), dimensions={}
  %multiply.82 = f32[64]{0} multiply(f32[64]{0} %p0.74, f32[64]{0} %broadcast.81)
  %add.83 = f32[64]{0} add(f32[64]{0} %reshape.80, f32[64]{0} %multiply.82)
  %reshape.84 = f32[1,64]{1,0} reshape(f32[64]{0} %add.83)
  %reshape.85 = f32[64]{0} reshape(f32[1,64]{1,0} %reshape.84)
  %reshape.89 = f32[1,64]{1,0} reshape(f32[64]{0} %p2.77)
  %transpose.88 = f32[64,64]{0,1} transpose(f32[64,64]{1,0} %p1.75), dimensions={1,0}
  %dot.90 = f32[1,64]{1,0} dot(f32[1,64]{1,0} %reshape.89, f32[64,64]{0,1} %transpose.88), lhs_contracting_dims={1}, rhs_contracting_dims={0}
  %reshape.91 = f32[64]{0} reshape(f32[1,64]{1,0} %dot.90)
  %constant.87 = f32[] constant(1)
  %broadcast.92 = f32[64]{0} broadcast(f32[] %constant.87), dimensions={}
  %multiply.93 = f32[64]{0} multiply(f32[64]{0} %p0.74, f32[64]{0} %broadcast.92)
  %add.94 = f32[64]{0} add(f32[64]{0} %reshape.91, f32[64]{0} %multiply.93)
  %reshape.95 = f32[1,64]{1,0} reshape(f32[64]{0} %add.94)
  %reshape.96 = f32[64]{0} reshape(f32[1,64]{1,0} %reshape.95)
  %constant.86 = f32[] constant(0)
  %broadcast.97 = f32[64]{0} broadcast(f32[] %constant.86), dimensions={}
  %multiply.98 = f32[64]{0} multiply(f32[64]{0} %reshape.96, f32[64]{0} %broadcast.97)
  ROOT %tuple.99 = (f32[64]{0}, f32[64]{0}) tuple(f32[64]{0} %reshape.85, f32[64]{0} %multiply.98)
}

%Body.100 (p0.101: (s64[], f32[64], f32[10,64,64], f32[10,64], f32[10,64], /*index=5*/f32[10,64])) -> (s64[], f32[64], f32[10,64,64], f32[10,64], f32[10,64], /*index=5*/f32[10,64]) {
  %p0.101 = (s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) parameter(0)
  %get-tuple-element.102 = s64[] get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.101), index=0
  %constant.109 = s64[] constant(1)
  %subtract.132 = s64[] subtract(s64[] %get-tuple-element.102, s64[] %constant.109)
  %get-tuple-element.105 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.101), index=3
  %constant.108 = s64[] constant(10)
  %subtract.110 = s64[] subtract(s64[] %constant.108, s64[] %get-tuple-element.102)
  %constant.117 = s64[] constant(0)
  %broadcast.118 = s64[] broadcast(s64[] %constant.117), dimensions={}
  %dynamic-slice.119 = f32[1,64]{1,0} dynamic-slice(f32[10,64]{1,0} %get-tuple-element.105, s64[] %subtract.110, s64[] %broadcast.118), dynamic_slice_sizes={1,64}
  %reshape.120 = f32[64]{0} reshape(f32[1,64]{1,0} %dynamic-slice.119)
  %get-tuple-element.104 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.101), index=2
  %constant.111 = s64[] constant(0)
  %broadcast.112 = s64[] broadcast(s64[] %constant.111), dimensions={}
  %constant.113 = s64[] constant(0)
  %broadcast.114 = s64[] broadcast(s64[] %constant.113), dimensions={}
  %dynamic-slice.115 = f32[1,64,64]{2,1,0} dynamic-slice(f32[10,64,64]{2,1,0} %get-tuple-element.104, s64[] %subtract.110, s64[] %broadcast.112, s64[] %broadcast.114), dynamic_slice_sizes={1,64,64}
  %reshape.116 = f32[64,64]{1,0} reshape(f32[1,64,64]{2,1,0} %dynamic-slice.115)
  %get-tuple-element.103 = f32[64]{0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.101), index=1
  %call.125 = (f32[64]{0}, f32[64]{0}) call(f32[64]{0} %reshape.120, f32[64,64]{1,0} %reshape.116, f32[64]{0} %get-tuple-element.103), to_apply=%PyLoweringContext.72
  %get-tuple-element.126 = f32[64]{0} get-tuple-element((f32[64]{0}, f32[64]{0}) %call.125), index=0
  %get-tuple-element.106 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.101), index=4
  %broadcast.121 = f32[1,64]{1,0} broadcast(f32[64]{0} %get-tuple-element.103), dimensions={1}
  %constant.122 = s64[] constant(0)
  %broadcast.123 = s64[] broadcast(s64[] %constant.122), dimensions={}
  %dynamic-update-slice.124 = f32[10,64]{1,0} dynamic-update-slice(f32[10,64]{1,0} %get-tuple-element.106, f32[1,64]{1,0} %broadcast.121, s64[] %subtract.110, s64[] %broadcast.123)
  %get-tuple-element.107 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.101), index=5
  %get-tuple-element.127 = f32[64]{0} get-tuple-element((f32[64]{0}, f32[64]{0}) %call.125), index=1
  %broadcast.128 = f32[1,64]{1,0} broadcast(f32[64]{0} %get-tuple-element.127), dimensions={1}
  %constant.129 = s64[] constant(0)
  %broadcast.130 = s64[] broadcast(s64[] %constant.129), dimensions={}
  %dynamic-update-slice.131 = f32[10,64]{1,0} dynamic-update-slice(f32[10,64]{1,0} %get-tuple-element.107, f32[1,64]{1,0} %broadcast.128, s64[] %subtract.110, s64[] %broadcast.130)
  ROOT %tuple.133 = (s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) tuple(s64[] %subtract.132, f32[64]{0} %get-tuple-element.126, f32[10,64,64]{2,1,0} %get-tuple-element.104, f32[10,64]{1,0} %get-tuple-element.105, f32[10,64]{1,0} %dynamic-update-slice.124, /*index=5*/f32[10,64]{1,0} %dynamic-update-slice.131)
}

%Condition.134 (p0.135: (s64[], f32[64], f32[10,64,64], f32[10,64], f32[10,64], /*index=5*/f32[10,64])) -> pred[] {
  %p0.135 = (s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) parameter(0)
  %get-tuple-element.137 = f32[64]{0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.135), index=1
  %get-tuple-element.138 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.135), index=2
  %get-tuple-element.139 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.135), index=3
  %get-tuple-element.140 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.135), index=4
  %get-tuple-element.141 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.135), index=5
  %get-tuple-element.136 = s64[] get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %p0.135), index=0
  %constant.142 = s64[] constant(0)
  ROOT %compare.143 = pred[] compare(s64[] %get-tuple-element.136, s64[] %constant.142), direction=GT
}

%scan.144 (p0.145: s64[], p1.146: f32[64], p2.147: f32[10,64,64], p3.148: f32[10,64], p4.149: f32[10,64], p5.150: f32[10,64]) -> (s64[], f32[64], f32[10,64,64], f32[10,64], f32[10,64], /*index=5*/f32[10,64]) {
  %p0.145 = s64[] parameter(0)
  %p1.146 = f32[64]{0} parameter(1)
  %p2.147 = f32[10,64,64]{2,1,0} parameter(2)
  %p3.148 = f32[10,64]{1,0} parameter(3)
  %p4.149 = f32[10,64]{1,0} parameter(4)
  %p5.150 = f32[10,64]{1,0} parameter(5)
  %tuple.151 = (s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) tuple(s64[] %p0.145, f32[64]{0} %p1.146, f32[10,64,64]{2,1,0} %p2.147, f32[10,64]{1,0} %p3.148, f32[10,64]{1,0} %p4.149, /*index=5*/f32[10,64]{1,0} %p5.150)
  ROOT %while.152 = (s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) while((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %tuple.151), condition=%Condition.134, body=%Body.100
}

%PyLoweringContext.173 (p0.175: f32[64,64], p1.178: f32[64], p2.185: f32[64], p3.195: f32[64]) -> (f32[64], f32[64,64], f32[64]) {
  %p2.185 = f32[64]{0} parameter(2)
  %constant.184 = f32[] constant(0)
  %broadcast.186 = f32[64]{0} broadcast(f32[] %constant.184), dimensions={}
  %multiply.187 = f32[64]{0} multiply(f32[64]{0} %p2.185, f32[64]{0} %broadcast.186)
  %reshape.188 = f32[1,64]{1,0} reshape(f32[64]{0} %multiply.187)
  %p0.175 = f32[64,64]{1,0} parameter(0)
  %transpose.182 = f32[64,64]{0,1} transpose(f32[64,64]{1,0} %p0.175), dimensions={1,0}
  %transpose.183 = f32[64,64]{1,0} transpose(f32[64,64]{0,1} %transpose.182), dimensions={1,0}
  %dot.189 = f32[1,64]{1,0} dot(f32[1,64]{1,0} %reshape.188, f32[64,64]{1,0} %transpose.183), lhs_contracting_dims={1}, rhs_contracting_dims={0}
  %reshape.190 = f32[64]{0} reshape(f32[1,64]{1,0} %dot.189)
  %p1.178 = f32[64]{0} parameter(1)
  %reshape.179 = f32[1,64]{1,0} reshape(f32[64]{0} %p1.178)
  %transpose.176 = f32[64,64]{0,1} transpose(f32[64,64]{1,0} %p0.175), dimensions={1,0}
  %transpose.177 = f32[64,64]{1,0} transpose(f32[64,64]{0,1} %transpose.176), dimensions={1,0}
  %dot.180 = f32[1,64]{1,0} dot(f32[1,64]{1,0} %reshape.179, f32[64,64]{1,0} %transpose.177), lhs_contracting_dims={1}, rhs_contracting_dims={0}
  %reshape.181 = f32[64]{0} reshape(f32[1,64]{1,0} %dot.180)
  %constant.174 = f32[] constant(1)
  %broadcast.191 = f32[64]{0} broadcast(f32[] %constant.174), dimensions={}
  %multiply.192 = f32[64]{0} multiply(f32[64]{0} %reshape.181, f32[64]{0} %broadcast.191)
  %add.193 = f32[64]{0} add(f32[64]{0} %reshape.190, f32[64]{0} %multiply.192)
  %p3.195 = f32[64]{0} parameter(3)
  %reshape.200 = f32[1,64]{1,0} reshape(f32[64]{0} %p3.195)
  %transpose.201 = f32[64,1]{0,1} transpose(f32[1,64]{1,0} %reshape.200), dimensions={1,0}
  %dot.202 = f32[64,64]{1,0} dot(f32[64,1]{0,1} %transpose.201, f32[1,64]{1,0} %reshape.188), lhs_contracting_dims={1}, rhs_contracting_dims={0}
  %transpose.203 = f32[64,64]{0,1} transpose(f32[64,64]{1,0} %dot.202), dimensions={1,0}
  %reshape.196 = f32[1,64]{1,0} reshape(f32[64]{0} %p3.195)
  %transpose.197 = f32[64,1]{0,1} transpose(f32[1,64]{1,0} %reshape.196), dimensions={1,0}
  %dot.198 = f32[64,64]{1,0} dot(f32[64,1]{0,1} %transpose.197, f32[1,64]{1,0} %reshape.179), lhs_contracting_dims={1}, rhs_contracting_dims={0}
  %transpose.199 = f32[64,64]{0,1} transpose(f32[64,64]{1,0} %dot.198), dimensions={1,0}
  %constant.194 = f32[] constant(1)
  %broadcast.204 = f32[64,64]{1,0} broadcast(f32[] %constant.194), dimensions={}
  %multiply.205 = f32[64,64]{1,0} multiply(f32[64,64]{0,1} %transpose.199, f32[64,64]{1,0} %broadcast.204)
  %add.206 = f32[64,64]{0,1} add(f32[64,64]{0,1} %transpose.203, f32[64,64]{1,0} %multiply.205)
  %constant.207 = f32[] constant(1)
  %broadcast.208 = f32[64]{0} broadcast(f32[] %constant.207), dimensions={}
  %multiply.209 = f32[64]{0} multiply(f32[64]{0} %p1.178, f32[64]{0} %broadcast.208)
  %add.210 = f32[64]{0} add(f32[64]{0} %multiply.187, f32[64]{0} %multiply.209)
  ROOT %tuple.211 = (f32[64]{0}, f32[64,64]{0,1}, f32[64]{0}) tuple(f32[64]{0} %add.193, f32[64,64]{0,1} %add.206, f32[64]{0} %add.210)
}

%Body.212 (p0.213: (s64[], f32[64], f32[10,64], f32[10,64], f32[10,64,64], /*index=5*/f32[10,64], f32[10,64], f32[10,64,64], f32[10,64])) -> (s64[], f32[64], f32[10,64], f32[10,64], f32[10,64,64], /*index=5*/f32[10,64], f32[10,64], f32[10,64,64], f32[10,64]) {
  %p0.213 = (s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) parameter(0)
  %get-tuple-element.219 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=5
  %constant.223 = s64[] constant(10)
  %get-tuple-element.214 = s64[] get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=0
  %subtract.225 = s64[] subtract(s64[] %constant.223, s64[] %get-tuple-element.214)
  %constant.240 = s64[] constant(0)
  %broadcast.241 = s64[] broadcast(s64[] %constant.240), dimensions={}
  %dynamic-slice.242 = f32[1,64]{1,0} dynamic-slice(f32[10,64]{1,0} %get-tuple-element.219, s64[] %subtract.225, s64[] %broadcast.241), dynamic_slice_sizes={1,64}
  %reshape.243 = f32[64]{0} reshape(f32[1,64]{1,0} %dynamic-slice.242)
  %constant.224 = s64[] constant(1)
  %subtract.262 = s64[] subtract(s64[] %get-tuple-element.214, s64[] %constant.224)
  %get-tuple-element.218 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=4
  %constant.234 = s64[] constant(0)
  %broadcast.235 = s64[] broadcast(s64[] %constant.234), dimensions={}
  %constant.236 = s64[] constant(0)
  %broadcast.237 = s64[] broadcast(s64[] %constant.236), dimensions={}
  %dynamic-slice.238 = f32[1,64,64]{2,1,0} dynamic-slice(f32[10,64,64]{2,1,0} %get-tuple-element.218, s64[] %subtract.225, s64[] %broadcast.235, s64[] %broadcast.237), dynamic_slice_sizes={1,64,64}
  %reshape.239 = f32[64,64]{1,0} reshape(f32[1,64,64]{2,1,0} %dynamic-slice.238)
  %get-tuple-element.215 = f32[64]{0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=1
  %get-tuple-element.216 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=2
  %constant.226 = s64[] constant(0)
  %broadcast.227 = s64[] broadcast(s64[] %constant.226), dimensions={}
  %dynamic-slice.228 = f32[1,64]{1,0} dynamic-slice(f32[10,64]{1,0} %get-tuple-element.216, s64[] %subtract.225, s64[] %broadcast.227), dynamic_slice_sizes={1,64}
  %reshape.229 = f32[64]{0} reshape(f32[1,64]{1,0} %dynamic-slice.228)
  %get-tuple-element.217 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=3
  %constant.230 = s64[] constant(0)
  %broadcast.231 = s64[] broadcast(s64[] %constant.230), dimensions={}
  %dynamic-slice.232 = f32[1,64]{1,0} dynamic-slice(f32[10,64]{1,0} %get-tuple-element.217, s64[] %subtract.225, s64[] %broadcast.231), dynamic_slice_sizes={1,64}
  %reshape.233 = f32[64]{0} reshape(f32[1,64]{1,0} %dynamic-slice.232)
  %call.248 = (f32[64]{0}, f32[64,64]{0,1}, f32[64]{0}) call(f32[64,64]{1,0} %reshape.239, f32[64]{0} %get-tuple-element.215, f32[64]{0} %reshape.229, f32[64]{0} %reshape.233), to_apply=%PyLoweringContext.173
  %get-tuple-element.249 = f32[64]{0} get-tuple-element((f32[64]{0}, f32[64,64]{0,1}, f32[64]{0}) %call.248), index=0
  %get-tuple-element.220 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=6
  %broadcast.244 = f32[1,64]{1,0} broadcast(f32[64]{0} %get-tuple-element.215), dimensions={1}
  %constant.245 = s64[] constant(0)
  %broadcast.246 = s64[] broadcast(s64[] %constant.245), dimensions={}
  %dynamic-update-slice.247 = f32[10,64]{1,0} dynamic-update-slice(f32[10,64]{1,0} %get-tuple-element.220, f32[1,64]{1,0} %broadcast.244, s64[] %subtract.225, s64[] %broadcast.246)
  %get-tuple-element.221 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=7
  %get-tuple-element.250 = f32[64,64]{0,1} get-tuple-element((f32[64]{0}, f32[64,64]{0,1}, f32[64]{0}) %call.248), index=1
  %broadcast.251 = f32[1,64,64]{2,1,0} broadcast(f32[64,64]{0,1} %get-tuple-element.250), dimensions={1,2}
  %constant.252 = s64[] constant(0)
  %broadcast.253 = s64[] broadcast(s64[] %constant.252), dimensions={}
  %constant.254 = s64[] constant(0)
  %broadcast.255 = s64[] broadcast(s64[] %constant.254), dimensions={}
  %dynamic-update-slice.256 = f32[10,64,64]{2,1,0} dynamic-update-slice(f32[10,64,64]{2,1,0} %get-tuple-element.221, f32[1,64,64]{2,1,0} %broadcast.251, s64[] %subtract.225, s64[] %broadcast.253, s64[] %broadcast.255)
  %get-tuple-element.222 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.213), index=8
  %get-tuple-element.257 = f32[64]{0} get-tuple-element((f32[64]{0}, f32[64,64]{0,1}, f32[64]{0}) %call.248), index=2
  %broadcast.258 = f32[1,64]{1,0} broadcast(f32[64]{0} %get-tuple-element.257), dimensions={1}
  %constant.259 = s64[] constant(0)
  %broadcast.260 = s64[] broadcast(s64[] %constant.259), dimensions={}
  %dynamic-update-slice.261 = f32[10,64]{1,0} dynamic-update-slice(f32[10,64]{1,0} %get-tuple-element.222, f32[1,64]{1,0} %broadcast.258, s64[] %subtract.225, s64[] %broadcast.260)
  ROOT %tuple.263 = (s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) tuple(s64[] %subtract.262, f32[64]{0} %get-tuple-element.249, f32[10,64]{1,0} %get-tuple-element.216, f32[10,64]{1,0} %get-tuple-element.217, f32[10,64,64]{2,1,0} %get-tuple-element.218, /*index=5*/f32[10,64]{1,0} %get-tuple-element.219, f32[10,64]{1,0} %dynamic-update-slice.247, f32[10,64,64]{2,1,0} %dynamic-update-slice.256, f32[10,64]{1,0} %dynamic-update-slice.261)
}

%Condition.264 (p0.265: (s64[], f32[64], f32[10,64], f32[10,64], f32[10,64,64], /*index=5*/f32[10,64], f32[10,64], f32[10,64,64], f32[10,64])) -> pred[] {
  %p0.265 = (s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) parameter(0)
  %get-tuple-element.267 = f32[64]{0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=1
  %get-tuple-element.268 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=2
  %get-tuple-element.269 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=3
  %get-tuple-element.270 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=4
  %get-tuple-element.271 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=5
  %get-tuple-element.272 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=6
  %get-tuple-element.273 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=7
  %get-tuple-element.274 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=8
  %get-tuple-element.266 = s64[] get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %p0.265), index=0
  %constant.275 = s64[] constant(0)
  ROOT %compare.276 = pred[] compare(s64[] %get-tuple-element.266, s64[] %constant.275), direction=GT
}

%scan.277 (p0.278: s64[], p1.279: f32[64], p2.280: f32[10,64], p3.281: f32[10,64], p4.282: f32[10,64,64], p5.283: f32[10,64], p6.284: f32[10,64], p7.285: f32[10,64,64], p8.286: f32[10,64]) -> (s64[], f32[64], f32[10,64], f32[10,64], f32[10,64,64], /*index=5*/f32[10,64], f32[10,64], f32[10,64,64], f32[10,64]) {
  %p0.278 = s64[] parameter(0)
  %p1.279 = f32[64]{0} parameter(1)
  %p2.280 = f32[10,64]{1,0} parameter(2)
  %p3.281 = f32[10,64]{1,0} parameter(3)
  %p4.282 = f32[10,64,64]{2,1,0} parameter(4)
  %p5.283 = f32[10,64]{1,0} parameter(5)
  %p6.284 = f32[10,64]{1,0} parameter(6)
  %p7.285 = f32[10,64,64]{2,1,0} parameter(7)
  %p8.286 = f32[10,64]{1,0} parameter(8)
  %tuple.287 = (s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) tuple(s64[] %p0.278, f32[64]{0} %p1.279, f32[10,64]{1,0} %p2.280, f32[10,64]{1,0} %p3.281, f32[10,64,64]{2,1,0} %p4.282, /*index=5*/f32[10,64]{1,0} %p5.283, f32[10,64]{1,0} %p6.284, f32[10,64,64]{2,1,0} %p7.285, f32[10,64]{1,0} %p8.286)
  ROOT %while.288 = (s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) while((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %tuple.287), condition=%Condition.264, body=%Body.212
}

ENTRY %IrToHlo.306 (p0.16: f32[64], p1.17: f32[64], p2.18: f32[64], p3.19: f32[64], p4.20: f32[64], p5.21: f32[64], p6.22: f32[64], p7.23: f32[64], p8.24: f32[64], p9.25: f32[64], p10.38: f32[64,64], p11.39: f32[64,64], p12.40: f32[64,64], p13.41: f32[64,64], p14.42: f32[64,64], p15.43: f32[64,64], p16.44: f32[64,64], p17.45: f32[64,64], p18.46: f32[64,64], p19.47: f32[64,64], p20.70: f32[64], p21.71: s64[]) -> (f32[64,64], f32[64]) {
  %p21.71 = s64[] parameter(21)
  %p20.70 = f32[64]{0} parameter(20)
  %p19.47 = f32[64,64]{1,0} parameter(19)
  %reshape.48 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p19.47)
  %p18.46 = f32[64,64]{1,0} parameter(18)
  %reshape.49 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p18.46)
  %p17.45 = f32[64,64]{1,0} parameter(17)
  %reshape.50 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p17.45)
  %p16.44 = f32[64,64]{1,0} parameter(16)
  %reshape.51 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p16.44)
  %p15.43 = f32[64,64]{1,0} parameter(15)
  %reshape.52 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p15.43)
  %p14.42 = f32[64,64]{1,0} parameter(14)
  %reshape.53 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p14.42)
  %p13.41 = f32[64,64]{1,0} parameter(13)
  %reshape.54 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p13.41)
  %p12.40 = f32[64,64]{1,0} parameter(12)
  %reshape.55 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p12.40)
  %p11.39 = f32[64,64]{1,0} parameter(11)
  %reshape.56 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p11.39)
  %p10.38 = f32[64,64]{1,0} parameter(10)
  %reshape.57 = f32[1,64,64]{2,1,0} reshape(f32[64,64]{1,0} %p10.38)
  %concatenate.58 = f32[10,64,64]{2,1,0} concatenate(f32[1,64,64]{2,1,0} %reshape.48, f32[1,64,64]{2,1,0} %reshape.49, f32[1,64,64]{2,1,0} %reshape.50, f32[1,64,64]{2,1,0} %reshape.51, f32[1,64,64]{2,1,0} %reshape.52, /*index=5*/f32[1,64,64]{2,1,0} %reshape.53, f32[1,64,64]{2,1,0} %reshape.54, f32[1,64,64]{2,1,0} %reshape.55, f32[1,64,64]{2,1,0} %reshape.56, f32[1,64,64]{2,1,0} %reshape.57), dimensions={0}
  %p9.25 = f32[64]{0} parameter(9)
  %reshape.26 = f32[1,64]{1,0} reshape(f32[64]{0} %p9.25)
  %p8.24 = f32[64]{0} parameter(8)
  %reshape.27 = f32[1,64]{1,0} reshape(f32[64]{0} %p8.24)
  %p7.23 = f32[64]{0} parameter(7)
  %reshape.28 = f32[1,64]{1,0} reshape(f32[64]{0} %p7.23)
  %p6.22 = f32[64]{0} parameter(6)
  %reshape.29 = f32[1,64]{1,0} reshape(f32[64]{0} %p6.22)
  %p5.21 = f32[64]{0} parameter(5)
  %reshape.30 = f32[1,64]{1,0} reshape(f32[64]{0} %p5.21)
  %p4.20 = f32[64]{0} parameter(4)
  %reshape.31 = f32[1,64]{1,0} reshape(f32[64]{0} %p4.20)
  %p3.19 = f32[64]{0} parameter(3)
  %reshape.32 = f32[1,64]{1,0} reshape(f32[64]{0} %p3.19)
  %p2.18 = f32[64]{0} parameter(2)
  %reshape.33 = f32[1,64]{1,0} reshape(f32[64]{0} %p2.18)
  %p1.17 = f32[64]{0} parameter(1)
  %reshape.34 = f32[1,64]{1,0} reshape(f32[64]{0} %p1.17)
  %p0.16 = f32[64]{0} parameter(0)
  %reshape.35 = f32[1,64]{1,0} reshape(f32[64]{0} %p0.16)
  %concatenate.36 = f32[10,64]{1,0} concatenate(f32[1,64]{1,0} %reshape.26, f32[1,64]{1,0} %reshape.27, f32[1,64]{1,0} %reshape.28, f32[1,64]{1,0} %reshape.29, f32[1,64]{1,0} %reshape.30, /*index=5*/f32[1,64]{1,0} %reshape.31, f32[1,64]{1,0} %reshape.32, f32[1,64]{1,0} %reshape.33, f32[1,64]{1,0} %reshape.34, f32[1,64]{1,0} %reshape.35), dimensions={0}
  %constant.65 = f32[] constant(0)
  %reshape.66 = f32[1,1]{1,0} reshape(f32[] %constant.65)
  %broadcast.67 = f32[1,1]{1,0} broadcast(f32[1,1]{1,0} %reshape.66), dimensions={0,1}
  %reshape.68 = f32[] reshape(f32[1,1]{1,0} %broadcast.67)
  %broadcast.69 = f32[10,64]{1,0} broadcast(f32[] %reshape.68), dimensions={}
  %constant.60 = f32[] constant(0)
  %reshape.61 = f32[1,1]{1,0} reshape(f32[] %constant.60)
  %broadcast.62 = f32[1,1]{1,0} broadcast(f32[1,1]{1,0} %reshape.61), dimensions={0,1}
  %reshape.63 = f32[] reshape(f32[1,1]{1,0} %broadcast.62)
  %broadcast.64 = f32[10,64]{1,0} broadcast(f32[] %reshape.63), dimensions={}
  %call.153 = (s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) call(s64[] %p21.71, f32[64]{0} %p20.70, f32[10,64,64]{2,1,0} %concatenate.58, f32[10,64]{1,0} %concatenate.36, f32[10,64]{1,0} %broadcast.69, /*index=5*/f32[10,64]{1,0} %broadcast.64), to_apply=%scan.144
  %get-tuple-element.154 = s64[] get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %call.153), index=0
  %get-tuple-element.155 = f32[64]{0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %call.153), index=1
  %get-tuple-element.156 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %call.153), index=2
  %get-tuple-element.157 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %call.153), index=3
  %get-tuple-element.159 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %call.153), index=5
  %constant.167 = f32[] constant(1)
  %broadcast.168 = f32[] broadcast(f32[] %constant.167), dimensions={}
  %reshape.169 = f32[1]{0} reshape(f32[] %broadcast.168)
  %broadcast.170 = f32[1]{0} broadcast(f32[1]{0} %reshape.169), dimensions={0}
  %reshape.171 = f32[] reshape(f32[1]{0} %broadcast.170)
  %broadcast.172 = f32[64]{0} broadcast(f32[] %reshape.171), dimensions={}
  %constant.161 = f32[] constant(0)
  %reshape.162 = f32[1,1]{1,0} reshape(f32[] %constant.161)
  %broadcast.163 = f32[1,1]{1,0} broadcast(f32[1,1]{1,0} %reshape.162), dimensions={0,1}
  %reshape.164 = f32[] reshape(f32[1,1]{1,0} %broadcast.163)
  %broadcast.165 = f32[10,64]{1,0} broadcast(f32[] %reshape.164), dimensions={}
  %reverse.166 = f32[10,64]{1,0} reverse(f32[10,64]{1,0} %broadcast.165), dimensions={0}
  %get-tuple-element.158 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}, f32[10,64]{1,0}, /*index=5*/f32[10,64]{1,0}) %call.153), index=4
  %reverse.160 = f32[10,64]{1,0} reverse(f32[10,64]{1,0} %get-tuple-element.158), dimensions={0}
  %reverse.59 = f32[10,64,64]{2,1,0} reverse(f32[10,64,64]{2,1,0} %concatenate.58), dimensions={0}
  %reverse.37 = f32[10,64]{1,0} reverse(f32[10,64]{1,0} %concatenate.36), dimensions={0}
  %constant.11 = f32[] constant(0)
  %reshape.12 = f32[1,1]{1,0} reshape(f32[] %constant.11)
  %broadcast.13 = f32[1,1]{1,0} broadcast(f32[1,1]{1,0} %reshape.12), dimensions={0,1}
  %reshape.14 = f32[] reshape(f32[1,1]{1,0} %broadcast.13)
  %broadcast.15 = f32[10,64]{1,0} broadcast(f32[] %reshape.14), dimensions={}
  %constant.6 = f32[] constant(0)
  %reshape.7 = f32[1,1,1]{2,1,0} reshape(f32[] %constant.6)
  %broadcast.8 = f32[1,1,1]{2,1,0} broadcast(f32[1,1,1]{2,1,0} %reshape.7), dimensions={0,1,2}
  %reshape.9 = f32[] reshape(f32[1,1,1]{2,1,0} %broadcast.8)
  %broadcast.10 = f32[10,64,64]{2,1,0} broadcast(f32[] %reshape.9), dimensions={}
  %constant.1 = f32[] constant(0)
  %reshape.2 = f32[1,1]{1,0} reshape(f32[] %constant.1)
  %broadcast.3 = f32[1,1]{1,0} broadcast(f32[1,1]{1,0} %reshape.2), dimensions={0,1}
  %reshape.4 = f32[] reshape(f32[1,1]{1,0} %broadcast.3)
  %broadcast.5 = f32[10,64]{1,0} broadcast(f32[] %reshape.4), dimensions={}
  %call.289 = (s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) call(s64[] %p21.71, f32[64]{0} %broadcast.172, f32[10,64]{1,0} %reverse.166, f32[10,64]{1,0} %reverse.160, f32[10,64,64]{2,1,0} %reverse.59, /*index=5*/f32[10,64]{1,0} %reverse.37, f32[10,64]{1,0} %broadcast.15, f32[10,64,64]{2,1,0} %broadcast.10, f32[10,64]{1,0} %broadcast.5), to_apply=%scan.277
  %get-tuple-element.290 = s64[] get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=0
  %get-tuple-element.291 = f32[64]{0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=1
  %get-tuple-element.292 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=2
  %get-tuple-element.293 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=3
  %get-tuple-element.294 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=4
  %get-tuple-element.295 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=5
  %get-tuple-element.296 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=6
  %get-tuple-element.297 = f32[10,64,64]{2,1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=7
  %reverse.299 = f32[10,64,64]{2,1,0} reverse(f32[10,64,64]{2,1,0} %get-tuple-element.297), dimensions={0}
  %slice.300 = f32[1,64,64]{2,1,0} slice(f32[10,64,64]{2,1,0} %reverse.299), slice={[4:5], [0:64], [0:64]}
  %reshape.301 = f32[64,64]{1,0} reshape(f32[1,64,64]{2,1,0} %slice.300)
  %get-tuple-element.298 = f32[10,64]{1,0} get-tuple-element((s64[], f32[64]{0}, f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, /*index=5*/f32[10,64]{1,0}, f32[10,64]{1,0}, f32[10,64,64]{2,1,0}, f32[10,64]{1,0}) %call.289), index=8
  %reverse.302 = f32[10,64]{1,0} reverse(f32[10,64]{1,0} %get-tuple-element.298), dimensions={0}
  %slice.303 = f32[1,64]{1,0} slice(f32[10,64]{1,0} %reverse.302), slice={[4:5], [0:64]}
  %reshape.304 = f32[64]{0} reshape(f32[1,64]{1,0} %slice.303)
  ROOT %tuple.305 = (f32[64,64]{1,0}, f32[64]{0}) tuple(f32[64,64]{1,0} %reshape.301, f32[64]{0} %reshape.304)
}

